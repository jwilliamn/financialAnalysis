install.packages("party")
install.packages("randomForest")
install.packages("party")
install.packages("C50")
setwd("/home/williamn/Repository/financialAnalysis")
data<- read.csv("energyCias2013.csv")
dataFrame<- data.frame(data)
# Financial variables
revenue<- dataFrame$revenue
costOfRevenue<- dataFrame$costOfRevenue
grossProfit<- dataFrame$grossProfit
operatingIncome<- dataFrame$operatingIncome
earningsBIT<- dataFrame$earningsBIT
interestExpense<- dataFrame$interestExpense
netIncome<- dataFrame$netIncome
cashEquivalents<- dataFrame$cashEquivalents
netReceivables<- dataFrame$netReceivables
inventory<- dataFrame$inventory
currentAssets<- dataFrame$currentAssets
longTermInvestments<- dataFrame$longTermInvestments
fixedAssets<- dataFrame$fixedAssets
totalAssets<- dataFrame$totalAssets
shortTermDebt<- dataFrame$shortTermDebt
currentLiabilities<- dataFrame$currentLiabilities
longTermDebt<- dataFrame$longTermDebt
totalLiabilities<- dataFrame$totalLiabilities
totalSHEquity<- dataFrame$totalSHEquity
netTangibleAs<- dataFrame$netTangibleAs
# Ratios
# Liquidity ratios
QRA<- (currentAssets - inventory)/currentLiabilities # quick ratio
LRA<- currentAssets/currentLiabilities # liquidity ratio
CRA<- cashEquivalents/currentLiabilities # cash ratio
# Asset utilization or turnover ratios
RTR<- revenue/netReceivables # receivableTurnonverRatio
ITR<- costOfRevenue/inventory # inventoryTurnonverRatio
NWR<- revenue/(currentAssets - currentLiabilities) # nwcTurnonverRatio
ATR<- revenue/totalAssets # assetTurnonverRatio
ETR<- revenue/totalSHEquity # equityTurnonverRatio
FAT<- revenue/fixedAssets # fixedAssetTurnonverRatio
LTA<- revenue/longTermInvestments # longTermAssetTurnonverRatio
CAT<- revenue/currentAssets # currentAssetTurnonverRatio
# Profitability ratios
GPM<- grossProfit/revenue # grossProfitMargin
EBI<- earningsBIT/revenue # ebitMargin
NPM<- netIncome/revenue # netProfitMargin
REQ<- netIncome/totalSHEquity # returnOnEquity
ROA<- netIncome/totalAssets # returnOnAssets
# Asset structure ratios
CAS<- currentAssets/totalAssets # currentAssetToTotalAssetRatio
ICU<- inventory/currentAssets # inventoryToCurrentAssetRatio
CEQ<- cashEquivalents/currentAssets # cashEquivToCurrentAssetRatio
LTE<- longTermInvestments/totalAssets # longTermToAssetRatio
# Solvency ratios
STF<- shortTermDebt/totalLiabilities # shortTermFinanDebtToTotalDebt
STD<- currentLiabilities/totalLiabilities # shortTermDebtToTotalDebt
ICR<- earningsBIT/interestExpense # interestCoverageRatio
DER<- totalLiabilities/totalSHEquity # debtRatio
LER<- totalLiabilities/totalAssets # leverageRatio
TFD<- (shortTermDebt + longTermDebt)/totalLiabilities # totalFinanDebtToTotalDebt
# Matrix of data with the ratios as variables
X<- cbind(QRA, LRA, CRA, RTR, ITR, NWR, ATR, ETR, FAT, LTA, CAT, GPM, EBI, NPM,
REQ, ROA, CAS, ICU, CEQ, LTE, STF, STD, ICR, DER, LER, TFD)
# Feature normalization
Xn<- scale(X)
XnFrame<- data.frame(Xn)
ind<- sample(2, nrow(XnFrame), replace= TRUE, prob = c(0.7, 0.3))
trainData<- XnFrame[ind==1,]
testData<- XnFrame[ind==2,]
formulaREQ<- REQ ~ QRA + LRA + CRA+ RTR+ ITR+NWR+ATR+ETR+FAT+LTA+CAT+GPM+EBI+NPM+ROA+CAS+ICU+CEQ+LTE+STF+STD+ICR+DER+LER+TFD
library(party)
fit2<- ctree(formulaREQ, data=trainData)
plot(fit2)
install.packages("randomForest")
library(randomForest)
fit3<- randomForest(formulaREQ, data=trainData)
print(fit3)
plot(fit3)
install.packages("tree")
library(tree)
fit4<- tree(formulaREQ, data=trainData)
plot(fit4)
text(fit4)
