REV<- "revenue"
REV
fa
factanal
setwd("/home/williamn/Repository/financialAnalysis")
data<- read.csv("energyCias2013.csv")
dataFrame<- data.frame(data)
# Financial variables
revenue<- dataFrame$revenue
costOfRevenue<- dataFrame$costOfRevenue
grossProfit<- dataFrame$grossProfit
operatingIncome<- dataFrame$operatingIncome
earningsBIT<- dataFrame$earningsBIT
interestExpense<- dataFrame$interestExpense
netIncome<- dataFrame$netIncome
cashEquivalents<- dataFrame$cashEquivalents
netReceivables<- dataFrame$netReceivables
inventory<- dataFrame$inventory
currentAssets<- dataFrame$currentAssets
longTermInvestments<- dataFrame$longTermInvestments
fixedAssets<- dataFrame$fixedAssets
totalAssets<- dataFrame$totalAssets
shortTermDebt<- dataFrame$shortTermDebt
currentLiabilities<- dataFrame$currentLiabilities
longTermDebt<- dataFrame$longTermDebt
totalLiabilities<- dataFrame$totalLiabilities
totalSHEquity<- dataFrame$totalSHEquity
netTangibleAs<- dataFrame$netTangibleAs
# Ratios
# Liquidity ratios
QRA<- (currentAssets - inventory)/currentLiabilities # quick ratio
LRA<- currentAssets/currentLiabilities # liquidity ratio
CRA<- cashEquivalents/currentLiabilities # cash ratio
# Asset utilization or turnover ratios
RTR<- revenue/netReceivables # receivableTurnonverRatio
ITR<- costOfRevenue/inventory # inventoryTurnonverRatio
NWR<- revenue/(currentAssets - currentLiabilities) # nwcTurnonverRatio
ATR<- revenue/totalAssets # assetTurnonverRatio
ETR<- revenue/totalSHEquity # equityTurnonverRatio
FAT<- revenue/fixedAssets # fixedAssetTurnonverRatio
LTA<- revenue/longTermInvestments # longTermAssetTurnonverRatio
CAT<- revenue/currentAssets # currentAssetTurnonverRatio
# Profitability ratios
GPM<- grossProfit/revenue # grossProfitMargin
EBI<- earningsBIT/revenue # ebitMargin
NPM<- netIncome/revenue # netProfitMargin
REQ<- netIncome/totalSHEquity # returnOnEquity
ROA<- netIncome/totalAssets # returnOnAssets
# Asset structure ratios
CAS<- currentAssets/totalAssets # currentAssetToTotalAssetRatio
ICU<- inventory/currentAssets # inventoryToCurrentAssetRatio
CEQ<- cashEquivalents/currentAssets # cashEquivToCurrentAssetRatio
LTE<- longTermInvestments/totalAssets # longTermToAssetRatio
# Solvency ratios
STF<- shortTermDebt/totalLiabilities # shortTermFinanDebtToTotalDebt
STD<- currentLiabilities/totalLiabilities # shortTermDebtToTotalDebt
ICR<- earningsBIT/interestExpense # interestCoverageRatio
DER<- totalLiabilities/totalSHEquity # debtRatio
LER<- totalLiabilities/totalAssets # leverageRatio
TFD<- (shortTermDebt + longTermDebt)/totalLiabilities # totalFinanDebtToTotalDebt
# Matrix of data with the ratios as variables
X<- cbind(QRA, LRA, CRA, PTR, ITR, NWR, ATR, ETR, FAT, LTA, CAT, GPM, EBI, NPM,
REQ, ROA, CAS, ICU, CEQ, LTE, STF, STD, ICR, DER, LER, TFD)
# Exploratory factor analysis
# Compute correlation matrix
corMatrix<- cor(X)
# Loading Data
setwd("/home/williamn/Repository/financialAnalysis")
data<- read.csv("energyCias2013.csv")
dataFrame<- data.frame(data)
# Financial variables
revenue<- dataFrame$revenue
costOfRevenue<- dataFrame$costOfRevenue
grossProfit<- dataFrame$grossProfit
operatingIncome<- dataFrame$operatingIncome
earningsBIT<- dataFrame$earningsBIT
interestExpense<- dataFrame$interestExpense
netIncome<- dataFrame$netIncome
cashEquivalents<- dataFrame$cashEquivalents
netReceivables<- dataFrame$netReceivables
inventory<- dataFrame$inventory
currentAssets<- dataFrame$currentAssets
longTermInvestments<- dataFrame$longTermInvestments
fixedAssets<- dataFrame$fixedAssets
totalAssets<- dataFrame$totalAssets
shortTermDebt<- dataFrame$shortTermDebt
currentLiabilities<- dataFrame$currentLiabilities
longTermDebt<- dataFrame$longTermDebt
totalLiabilities<- dataFrame$totalLiabilities
totalSHEquity<- dataFrame$totalSHEquity
netTangibleAs<- dataFrame$netTangibleAs
# Ratios
# Liquidity ratios
QRA<- (currentAssets - inventory)/currentLiabilities # quick ratio
LRA<- currentAssets/currentLiabilities # liquidity ratio
CRA<- cashEquivalents/currentLiabilities # cash ratio
# Asset utilization or turnover ratios
RTR<- revenue/netReceivables # receivableTurnonverRatio
ITR<- costOfRevenue/inventory # inventoryTurnonverRatio
NWR<- revenue/(currentAssets - currentLiabilities) # nwcTurnonverRatio
ATR<- revenue/totalAssets # assetTurnonverRatio
ETR<- revenue/totalSHEquity # equityTurnonverRatio
FAT<- revenue/fixedAssets # fixedAssetTurnonverRatio
LTA<- revenue/longTermInvestments # longTermAssetTurnonverRatio
CAT<- revenue/currentAssets # currentAssetTurnonverRatio
# Profitability ratios
GPM<- grossProfit/revenue # grossProfitMargin
EBI<- earningsBIT/revenue # ebitMargin
NPM<- netIncome/revenue # netProfitMargin
REQ<- netIncome/totalSHEquity # returnOnEquity
ROA<- netIncome/totalAssets # returnOnAssets
# Asset structure ratios
CAS<- currentAssets/totalAssets # currentAssetToTotalAssetRatio
ICU<- inventory/currentAssets # inventoryToCurrentAssetRatio
CEQ<- cashEquivalents/currentAssets # cashEquivToCurrentAssetRatio
LTE<- longTermInvestments/totalAssets # longTermToAssetRatio
# Solvency ratios
STF<- shortTermDebt/totalLiabilities # shortTermFinanDebtToTotalDebt
STD<- currentLiabilities/totalLiabilities # shortTermDebtToTotalDebt
ICR<- earningsBIT/interestExpense # interestCoverageRatio
DER<- totalLiabilities/totalSHEquity # debtRatio
LER<- totalLiabilities/totalAssets # leverageRatio
TFD<- (shortTermDebt + longTermDebt)/totalLiabilities # totalFinanDebtToTotalDebt
# Matrix of data with the ratios as variables
X<- cbind(QRA, LRA, CRA, RTR, ITR, NWR, ATR, ETR, FAT, LTA, CAT, GPM, EBI, NPM,
REQ, ROA, CAS, ICU, CEQ, LTE, STF, STD, ICR, DER, LER, TFD)
# Exploratory factor analysis
# Compute correlation matrix
corMatrix<- cor(X)
diag<- diag(rep(1,26))
diag
cor.min <- corMatrix - diag
cor.min
h2 <- apply(abs(cor.min), 2, max)
h2
# Compute eigenvalues and eigenvectors of reduced correlation matrix
cor.reduced <- cor.min + diag(h2)
cor.reduced
eig <- eigen(cor.reduced)
eig
# Consideremos nuestro modelo para k=10
#pf10 <- eig$vectors[,1:10] %*% diag(eig$values[1:10]^{1/2});
#pf10
# h^2:
#pf10^2;
# Consideremos el modelo para k=13
pf12 <- eig$vectors[,1:12] %*% diag(eig$values[1:12]^{1/2})
pf12
# h^2:
apply(pf12^2, 1, sum)
# Actualizamos la estimacion para los "communalities"
for (i in 1:100){
h2 <- apply(pf12^2, 1, sum)
cor.reduced <- cor.min + diag(h2)
eig <- eigen(cor.reduced)
pf12 <- eig$vectors[,1:12] %*% diag(eig$values[1:12]^{1/2})
}
pf12
h2
# Veamos si la condicion 2 se satisface
round(t(pf12) %*% pf12, 26)
# Veamos si Lambda*Lambda' + Psi se acerca a la matrix de correlacion
fit <- pf12 %*% t(pf12) + diag(1-h2)
fit
#cor(scor)
round(corMatrix-fit, 26)
fa1<- factanal(corMatrix, 10, rotation="varimax")
fa1<- factanal(corMatrix, 5, rotation="varimax")
corMatrix
fa1<- factanal(X, 5, rotation="varimax")
fa1<- factanal(X, 5, rotation="none")
fa1<- factanal(X, 2, rotation="none")
print(fa1, cutoff=.3)
fa1<- factanal(X, 2, rotation="varimax")
print(fa1, cutoff=.3)
fa1<- factanal(X, 5, rotation="varimax")
fa1<- factanal(X, 4, rotation="varimax")
fa1<- factanal(X, 3, rotation="varimax")
print(fa1, cutoff=.3)
X
mean(X)
scale(X)
mean(X)
Xn<- scale(X)
mean(Xn)
fa1<- factanal(Xn, 3, rotation="varimax")
fa1<- factanal(Xn, 4, rotation="varimax")
data
install.packages("GPArotation")
library("GPArotation", lib.loc="~/R/i686-pc-linux-gnu-library/3.1")
factors<- fa(corMatrix, nfactors=5, rotate="varimax", fm="ml")
require(GPArotation)
factors<- fa(corMatrix, nfactors=5, rotate="varimax", fm="ml")
install.packages("psych")
library(psych)
factors<- fa(corMatrix, nfactors=5, rotate="varimax", fm="ml")
factors
factors<- fa(corMatrix, nfactors=10, rotate="varimax", fm="ml")
factors
factors<- fa(corMatrix, nfactors=15, rotate="varimax", fm="ml")
factors<- fa(corMatrix, nfactors=13, rotate="varimax", fm="ml")
factors<- fa(corMatrix, nfactors=12, rotate="varimax", fm="ml")
factors
factors<- fa(corMatrix, nfactors=10, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
factors<- fa(corMatrix, nfactors=8, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
summary(factors)
factors<- fa(corMatrix, nfactors=8, rotate="varimax", fm="ml")
factors
factors<- fa(corMatrix, nfactors=8, rotate="varimax", fm="pa")
Xn
X
mean(X)
mean(Xn)
corn<- cor(Xn)
factors<- fa(corn, nfactors=8, rotate="varimax", fm="pa")
factors<- fa(corn, nfactors=8, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
factors<- fa(corMatrix, nfactors=8, rotate="varimax", fm="ml")
factors
factors<- fa(corn, nfactors=8, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
factors<- fa(corMatrix, nfactors=8, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
summary(factors)
factors<- fa(corn, nfactors=8, rotate="varimax", fm="ml")
summary(factors)
factors<- fa(corn, nfactors=6, rotate="varimax", fm="ml")
summary(factors)
print(factors$loadings, cutoff = .3)
factors<- fa(corn, nfactors=9, rotate="varimax", fm="ml")
summary(factors)
print(factors$loadings, cutoff = .3)
factors<- fa(corMatrix, nfactors=9, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
factors<- fa(corMatrix, nfactors=11, rotate="varimax", fm="ml")
factorsn<- fa(corn, nfactors=11, rotate="varimax", fm="ml")
print(factors$loadings, cutoff = .3)
print(factorsn$loadings, cutoff = .3)
summary(factors)
summary(factorsn)
scree(corMatrix)
scree(corn)
corMatrix
eigen(corMatrix)
scree(corn, main = "Number of factors")
corMatrix$e.values
factorsn<- fa(corn, nfactors=8, rotate="varimax", fm="ml")
summary(factorsn)
factors
factorsn
fa.parallel(corn)
cov<- cov(Xn)
factanal1<- factanal(cov,6,rotation = "varimax")
library(nFactors)
install.packages("nFactors")
library(nFactors)
ev<- eigen(corn)
ap<- parallel(subject = nrow(Xn), var = ncol(Xn), rep = 100, cent = .05)
ns<- nScree(x= ev$values, aparallel = ap$eigen$qevpea)
plotnScree(ns)
